# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Shared Blackball - Publish to Azure

on:
 workflow_call:
    inputs:
     project_to_deploy:
      required: true
      type: string
     azure_app_name:
      required: true
      type: string
     working_directory:
      required: false
      type: string
      default: ./
    secrets:
      azure_publish_profile:
        required: true

jobs:

  publish:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Bump version
        shell: pwsh
        run: |
            
            
            Get-ChildItem -Path .\ -Filter *.csproj -Recurse -File | ForEach-Object {
                Set assemblyInfoPath $_.FullName
                Set folderName $_.Directory
                
                # When you rebuild a project, the staticwebassets.pack.sentinel file seems to be last modified. Let's restrict to just those files
                # which are actual code (ie. which warrant a deploy)
                # runtimeconfig.json is tagged when you build the app
                Set filter {(($_.name -like "*.png") -or ($_.name -like "*.gif") -or ($_.name -like "*.jpg") -or ($_.name -like "*.targets") -or ($_.name -like "*.svg") -or ($_.name -like "*.json") -or ($_.name -like "*.cs") -or ($_.name -like "*.csproj") -or ($_.name -like "*.ts") -or ($_.name -like "*.js") -or ($_.name -like "*.less") -or ($_.name -like "*.cshtml") -or ($_.name -like "*.xml")) -and ($_.name -notlike "*.runtimeconfig.json") -and ($_.name -notlike "*.nuget.dgspec.json") -and ($_.FullName -notlike "*\bin\*") -and ($_.FullName -notlike "*\obj\*") -and ($_.FullName -notlike "*\.vscode\*")}
            
                # Have to clear the variable, otherwise PS will remember the value from the prior loop!
                Set lastModifiedFile $null
                Get-ChildItem $folderName -Recurse | Where-Object $filter | Sort-Object LastWriteTime -Descending | Select-Object -First 1 | Set lastModifiedFile
                if ($lastModifiedFile -eq $null){
                    "No modified files were found for $file"
                    continue
                }
            
            
                Set lastModified ($lastModifiedFile).LastWriteTime
                Set lastModifiedFileName ($lastModifiedFile).Name
                Set lastPublishDate $lastModified
                Set lastPublishDateDesc ""
                "The last modified file was $lastModifiedFileName, at $lastModified"
               
                $packageVersion = $lastModified.ToString("3.yy.MMdd.HHmm")
                Set versionTag "<FileVersion>$packageVersion</FileVersion>"
                "Patching $assemblyInfoPath to $packageVersion"
                ((Get-Content -path $assemblyInfoPath -Raw) -replace '\<FileVersion\>[^\<]+\</FileVersion\>', $versionTag) | Set-Content -path $assemblyInfoPath
            }
            
            "Bumping service worker version $packageVersion"
            Get-Date -Format "3.yy.MMdd.HHmm" | Set packageVersion
            Set versionTag "<FileVersion>$packageVersion</FileVersion>"
            Set swTag "const VERSION = ""$packageVersion"";"
            Get-ChildItem -Path .\ -Filter serviceworker.* -Recurse -File -Name| ForEach-Object {
             Set swFilePath $_
             "Patching $swFilePath"
             ((Get-Content -path $swFilePath -Raw) -replace 'const VERSION = \"[^\"]+\";', $swTag) | Set formattedFile
             Set-Content $formattedFile -path $swFilePath
            }

